// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow tests matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "basename": "/conduit/",
      "children": <Provider
        store={
                Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      }
        }
>
        <div>
                <Header(NavLink) />
                <Switch>
                        <Route
                                exact={true}
                                path="/"
                                render={[Function]}
                        />
                        <Route
                                path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                                render={[Function]}
                        />
                        <Route
                                render={[Function]}
                        />
                </Switch>
                <Footer(Link) />
        </div>
</Provider>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Header(NavLink) />
          <Switch>
                    <Route
                              exact={true}
                              path="/"
                              render={[Function]}
                    />
                    <Route
                              path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                              render={[Function]}
                    />
                    <Route
                              render={[Function]}
                    />
          </Switch>
          <Footer(Link) />
</div>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Header(NavLink) />,
            <Switch>
              <Route
                            exact={true}
                            path="/"
                            render={[Function]}
              />
              <Route
                            path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                            render={[Function]}
              />
              <Route
                            render={[Function]}
              />
</Switch>,
            <Footer(Link) />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  exact={true}
                  path="/"
                  render={[Function]}
/>,
                <Route
                  path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                  render={[Function]}
/>,
                <Route
                  render={[Function]}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "exact": true,
                  "path": "/",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "basename": "/conduit/",
        "children": <Provider
          store={
                    Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            }
          }
>
          <div>
                    <Header(NavLink) />
                    <Switch>
                              <Route
                                        exact={true}
                                        path="/"
                                        render={[Function]}
                              />
                              <Route
                                        path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                                        render={[Function]}
                              />
                              <Route
                                        render={[Function]}
                              />
                    </Switch>
                    <Footer(Link) />
          </div>
</Provider>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div>
            <Header(NavLink) />
            <Switch>
                        <Route
                                    exact={true}
                                    path="/"
                                    render={[Function]}
                        />
                        <Route
                                    path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                                    render={[Function]}
                        />
                        <Route
                                    render={[Function]}
                        />
            </Switch>
            <Footer(Link) />
</div>,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Header(NavLink) />,
              <Switch>
                <Route
                                exact={true}
                                path="/"
                                render={[Function]}
                />
                <Route
                                path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                                render={[Function]}
                />
                <Route
                                render={[Function]}
                />
</Switch>,
              <Footer(Link) />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    exact={true}
                    path="/"
                    render={[Function]}
/>,
                  <Route
                    path="/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)"
                    render={[Function]}
/>,
                  <Route
                    render={[Function]}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "exact": true,
                    "path": "/",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/:todo(new-post|settings|sign-up|profile\\\\/[^\\\\/]*|article\\\\/[^\\\\/]*)",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
